name: Databricks Repo Deploy

on:
  push:
    branches:
      - test
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy-to-databricks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Databricks CLI v2 (new CLI)
        run: |
          pip install databricks-cli-v2
          databricks -v  # üëà This will now show CLI v2 installed

      # üöÄ Deploy to Dev-Regulatory
      - name: Sync Dev-Regulatory (test)
        env:
          DATABRICKS_HOST: https://adb-3513101341676673.13.azuredatabricks.net
          DATABRICKS_TOKEN: ${{ secrets.DEV_REGULATORY_TOKEN }}
        run: |
          echo "Deploying test branch to Dev-Regulatory..."

          # Create the repo directory if needed
          databricks workspace mkdirs /Repos/Dev-Regulatory || true

          # Check if repo exists
          if ! databricks repos get --path "/Repos/Dev-Regulatory/Databricks-cicd" > /dev/null 2>&1; then
            echo "Creating new repo in Dev-Regulatory..."
            databricks repos create \
              --path "/Repos/Dev-Regulatory/Databricks-cicd" \
              --url "https://github.com/${{ github.repository }}.git" \
              --provider "github" \
              --branch "test"
          else
            echo "Repo already exists. Updating to branch 'test'..."
            databricks repos update \
              --path "/Repos/Dev-Regulatory/Databricks-cicd" \
              --branch "test" || {
                echo "‚ùå Git conflict. Resetting Dev-Regulatory repo..."
                databricks repos delete --path "/Repos/Dev-Regulatory/Databricks-cicd"
                databricks repos create \
                  --path "/Repos/Dev-Regulatory/Databricks-cicd" \
                  --url "https://github.com/${{ github.repository }}.git" \
                  --provider "github" \
                  --branch "test"
              }
          fi
