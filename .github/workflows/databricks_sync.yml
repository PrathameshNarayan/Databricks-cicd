name: Databricks CI/CD Pipeline
on:
  push:
    branches: [ main ]

jobs:
  sync-notebooks:
    runs-on: ubuntu-latest
    steps:
      # ========== SETUP ==========
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for proper git history

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install urllib3==1.26.6
          pip install databricks-cli==0.17.3

      # ========== DEV-REGULATORY SYNC ==========
      - name: Sync to Dev-Regulatory
        env:
          DATABRICKS_HOST: https://adb-3513101341676673.13.azuredatabricks.net
          DATABRICKS_TOKEN: ${{ secrets.DEV_REGULATORY_TOKEN }}
        run: |
          # 1. Create directory structure
          databricks workspace mkdirs /Repos/Dev-Regulatory

          # 2. Link GitHub repo (if not exists)
          if ! databricks repos get --path "/Repos/Dev-Regulatory/Databricks-cicd" 2>/dev/null; then
            databricks repos create \
              --url https://github.com/${{ github.repository }}.git \
              --provider github \
              --path "/Repos/Dev-Regulatory/Databricks-cicd"
          fi

          # 3. Force sync
          databricks repos update \
            --path "/Repos/Dev-Regulatory/Databricks-cicd" \
            --branch "main"

          # 4. Sync User Workspace notebook if needed
          databricks workspace import \
            --path "/Repos/Dev-Regulatory/Databricks-cicd/test" \
            --format SOURCE \
            --language PYTHON \
            --content "$(curl -s https://raw.githubusercontent.com/${{ github.repository }}/main/test.py)" \
            --overwrite

      # ========== DEV-OPS SYNC ==========
      - name: Sync to Dev-Ops
        env:
          DATABRICKS_HOST: https://adb-762609464519174.14.azuredatabricks.net
          DATABRICKS_TOKEN: ${{ secrets.DEV_OPS_TOKEN }}
        run: |
          # 1. Create directory structure
          databricks workspace mkdirs /Repos/Dev-Ops

          # 2. Link GitHub repo (if not exists)
          if ! databricks repos get --path "/Repos/Dev-Ops/Databricks-cicd" 2>/dev/null; then
            databricks repos create \
              --url https://github.com/${{ github.repository }}.git \
              --provider github \
              --path "/Repos/Dev-Ops/Databricks-cicd"
          fi

          # 3. Force sync
          databricks repos update \
            --path "/Repos/Dev-Ops/Databricks-cicd" \
            --branch "main"

          # 4. Sync User Workspace notebook if needed
          databricks workspace import \
            --path "/Repos/Dev-Ops/Databricks-cicd/test" \
            --format SOURCE \
            --language PYTHON \
            --content "$(curl -s https://raw.githubusercontent.com/${{ github.repository }}/main/test.py)" \
            --overwrite

      # ========== VERIFICATION ==========
      - name: Verify Sync
        env:
          DATABRICKS_HOST: https://adb-3513101341676673.13.azuredatabricks.net
          DATABRICKS_TOKEN: ${{ secrets.DEV_REGULATORY_TOKEN }}
        run: |
          echo "Synced files in Dev-Regulatory:"
          databricks workspace ls /Repos/Dev-Regulatory/Databricks-cicd
          echo "\nFile content:"
          databricks workspace export /Repos/Dev-Regulatory/Databricks-cicd/test --format SOURCE
